<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="File Format Converter Tool - Convert files between different formats with SalmMart Tools">
    <title>File Format Converter - SalmMart</title>
    <style>
        /* Your Original Styles - Perfectly Matched */
        body {
            text-align: center;
            font-family: Arial, sans-serif;
            background: linear-gradient(to right, #f0f8ff, #e6e6fa);
            margin: 0;
            padding: 0;
            scroll-behavior: smooth;
        }

        nav {
            background-color: #4CAF50;
            padding: 10px 0;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        nav a {
            color: white;
            font-size: 18px;
            text-decoration: none;
            margin: 0 15px;
        }

        nav a:hover {
            text-decoration: underline;
        }

        .hero {
            background: url('images/tool-banner.jpg') no-repeat center center/cover;
            color: white;
            padding: 100px 20px;
            text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7);
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 1s forwards ease-out;
        }

        @keyframes fadeInUp {
            to { opacity: 1; transform: translateY(0); }
        }

        .hero h1 {
            font-size: 48px;
        }

        .hero p {
            font-size: 20px;
        }

        .card-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .card {
            background-color: #ffefd5;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            transition: transform 0.2s, box-shadow 0.2s;
            opacity: 0;
            transform: scale(0.95);
            animation: fadeIn 0.5s forwards ease-in-out;
        }

        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        @keyframes fadeIn {
            to { opacity: 1; transform: scale(1); }
        }

        .card button {
            background-color: #4CAF50;
            color: white;
            font-size: 16px;
            padding: 10px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            margin-top: 10px;
            transition: background-color 0.3s ease-in-out;
        }

        .card button:hover {
            background-color: #45a049;
        }

        /* File Format Converter Specific Styles */
        .file-input {
            display: none;
        }

        .file-label {
            background-color: #4CAF50;
            color: white;
            font-size: 16px;
            padding: 10px 20px;
            border-radius: 25px;
            cursor: pointer;
            margin: 10px 0;
            display: inline-block;
            transition: background-color 0.3s ease-in-out;
        }

        .file-label:hover {
            background-color: #45a049;
        }

        .format-select {
            width: 70%;
            padding: 10px;
            margin: 10px 0;
            border: 2px solid #4CAF50;
            border-radius: 25px;
            font-size: 16px;
        }

        .conversion-results {
            text-align: left;
            background: #f8f8f8;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .download-button {
            background-color: #ff6347;
            color: white;
            font-size: 14px;
            padding: 8px 15px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            margin-top: 10px;
            transition: background-color 0.3s ease-in-out;
        }

        .download-button:hover {
            background-color: #e5533d;
        }

        .reset-button {
            background-color: #4CAF50;
            color: white;
            font-size: 14px;
            padding: 8px 15px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            margin-top: 10px;
            transition: background-color 0.3s ease-in-out;
        }

        .reset-button:hover {
            background-color: #45a049;
        }

        .progress-bar {
            width: 70%;
            height: 10px;
            background: #eee;
            border-radius: 5px;
            margin: 20px auto;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: #4CAF50;
            width: 0;
            transition: width 0.3s ease;
        }

        .preview-container {
            display: flex;
            justify-content: space-around;
            gap: 20px;
            margin: 20px 0;
        }

        .preview-container img {
            max-width: 45%;
            border-radius: 10px;
        }
        footer {
        background-color: #4CAF50;
        color: white;
        text-align: center;
        padding: 10px 0;
        position: fixed;
        width: 100%;
        bottom: 0;
      }
    </style>
</head>
<body>
    <nav>
        <a href="index.html">Home</a>
        <a href="about.html">About</a>
        <a href="services.html">Services</a>
        <a href="contact.html">Contact</a>
    </nav>

    <div class="hero">
        <h1>File Format Converter</h1>
        <p>Convert files between different formats effortlessly</p>
        <label for="fileInput" class="file-label">Upload Files</label>
        <input type="file" 
               id="fileInput" 
               class="file-input" 
               accept=".pdf,.docx,.xlsx,.pptx,.jpg,.png,.gif" 
               multiple>
    </div>

    <div class="card-container">
        <div class="card">
            <h2>Convert Files</h2>
            <select id="formatSelect" class="format-select">
                <option value="pdf">PDF</option>
                <option value="docx">Word (DOCX)</option>
                <option value="xlsx">Excel (XLSX)</option>
                <option value="pptx">PowerPoint (PPTX)</option>
                <option value="jpg">JPG</option>
                <option value="png">PNG</option>
                <option value="gif">GIF</option>
            </select>
            <div class="progress-bar">
                <div id="progressFill" class="progress-fill"></div>
            </div>
            <div id="conversionResults" class="conversion-results">
                <!-- Conversion results will appear here -->
            </div>
            <div class="preview-container">
                <div>
                    <h3>Original</h3>
                    <img id="originalPreview" class="image-preview" alt="Original File">
                </div>
                <div>
                    <h3>Converted</h3>
                    <img id="convertedPreview" class="image-preview" alt="Converted File">
                </div>
            </div>
            <button id="downloadButton" class="download-button" style="display: none;">Download Converted Files</button>
            <button id="resetButton" class="reset-button" style="display: none;">Reset</button>
        </div>
    </div>

    <script>
        const fileInput = document.getElementById('fileInput');
        const formatSelect = document.getElementById('formatSelect');
        const conversionResults = document.getElementById('conversionResults');
        const downloadButton = document.getElementById('downloadButton');
        const resetButton = document.getElementById('resetButton');
        const progressFill = document.getElementById('progressFill');
        const originalPreview = document.getElementById('originalPreview');
        const convertedPreview = document.getElementById('convertedPreview');

        let uploadedFiles = [];

        fileInput.addEventListener('change', function (e) {
            uploadedFiles = Array.from(e.target.files);
            if (uploadedFiles.length === 0) return;

            // Display file details
            conversionResults.innerHTML = `
                <div>Files Uploaded: ${uploadedFiles.length}</div>
                <div>Total Size: ${(uploadedFiles.reduce((acc, file) => acc + file.size, 0) / 1024).toFixed(2)} KB</div>
            `;

            // Show reset button
            resetButton.style.display = 'block';

            // Preview the first file (if it's an image)
            const firstFile = uploadedFiles[0];
            if (firstFile.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    originalPreview.src = event.target.result;
                };
                reader.readAsDataURL(firstFile);
            } else {
                originalPreview.src = '';
            }
        });

        formatSelect.addEventListener('change', function () {
            if (uploadedFiles.length > 0) {
                convertFiles(uploadedFiles, formatSelect.value);
            }
        });

        resetButton.addEventListener('click', function () {
            fileInput.value = '';
            uploadedFiles = [];
            conversionResults.innerHTML = '';
            downloadButton.style.display = 'none';
            resetButton.style.display = 'none';
            progressFill.style.width = '0';
            originalPreview.src = '';
            convertedPreview.src = '';
        });

        function convertFiles(files, targetFormat) {
            progressFill.style.width = '0';

            // Simulate file conversion (replace with actual conversion logic)
            let progress = 0;
            const progressInterval = setInterval(() => {
                progress += 10;
                progressFill.style.width = `${progress}%`;
                if (progress >= 90) clearInterval(progressInterval);
            }, 100);

            setTimeout(() => {
                clearInterval(progressInterval);
                progressFill.style.width = '100%';

                // Simulate converted files
                const convertedFiles = files.map((file, index) => {
                    return new File([file], `converted-file-${index + 1}.${targetFormat}`, {
                        type: `application/${targetFormat}`,
                    });
                });

                // Show download button
                downloadButton.style.display = 'block';
                downloadButton.onclick = () => {
                    convertedFiles.forEach((file, index) => {
                        const a = document.createElement('a');
                        a.href = URL.createObjectURL(file);
                        a.download = `converted-file-${index + 1}.${targetFormat}`;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);
                    });
                };

                // Preview the first converted file (if it's an image)
                if (targetFormat === 'jpg' || targetFormat === 'png' || targetFormat === 'gif') {
                    const reader = new FileReader();
                    reader.onload = function (event) {
                        convertedPreview.src = event.target.result;
                    };
                    reader.readAsDataURL(convertedFiles[0]);
                } else {
                    convertedPreview.src = '';
                }
            }, 2000); // Simulate 2-second conversion delay
        }
    </script>

    <footer>
        <p>&copy; 2025 SalmMart Tools. All rights reserved.</p>
    </footer>

    <button id="back-to-top" onclick="window.scrollTo({ top: 0, behavior: 'smooth' });">↑</button>

    <script>
        // Your Original Back-to-Top Script
        const backToTopButton = document.getElementById('back-to-top');
        window.addEventListener('scroll', () => {
            backToTopButton.style.display = window.scrollY > 200 ? 'block' : 'none';
        });
    </script>
</body>
</html>
